# This workflow builds the Framework.All.sln and runs all tests for the solution
name: .NET Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore Framework-All.sln

    - name: Build solution
      run: dotnet build Framework-All.sln --configuration Release --no-restore

      # Framework Tests
    - name: Run tests
      run: >
        dotnet test Framework-All.sln \
          --configuration Release \
          --no-build \
          --logger "trx;LogFilePrefix=TestResults" \
          --results-directory TestResults/ \
          --collect:"XPlat Code Coverage" \
          /p:CollectCoverage=true \
          /p:CoverletOutput=TestResults/ \
          /p:CoverletOutputFormat=cobertura

    - name: Upload test results artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: TestResults/**.trx

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: TestResults/**.trx
        check_name: "Test Results"
        comment_title: "Test Results"


    - name: Combine Coverage Reports # This is because one report is produced per project, and we want one result for all of them.
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.17
      with:
        reports: "TestResults/**/*.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: "${{ github.workspace }}" # REQUIRED # The directory where the generated report should be saved.
        reporttypes: "Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
        verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
        title: "Code Coverage Report" # Optional title.
        tag: "${{ github.run_number }}_${{ github.run_id }}" # Optional tag or build version.
        customSettings: "" # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
        toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.

    - name: Upload code coverage report
      uses: actions/upload-artifact@v4
      with:
        name: framework-code-coverage-report
        path: ${{ github.workspace }}/Cobertura.xml

    # Publish Code Coverage Summaries
    - name: Publish code coverage summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: "Cobertura.xml"
        badge: true
        fail_below_min: false
        format: markdown
        output: both

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
